-- First of all we create a database and then import all the tables into this

Create database pizzahut

-- Basic Questions --
-- Q.1: Retrieve the total no. of orders placed.
SELECT 
    COUNT(order_id) AS total_orders
FROM
    pizzahut.orders
-- Total no. of orders are 21350

-- Q.2: Calculate the total revenue generated from Pizza Sales
SELECT 
    ROUND(SUM(order_details.quantity * pizzas.price),
            2) AS total_sales
FROM
    pizzahut.order_details
        JOIN
    pizzahut.pizzas ON pizzas.pizza_id = order_details.pizza_id
-- Hence the total revenue generated from Pizza Sales is 817860.05

-- Q.3: Identify the highest priced pizza
SELECT 
    pt.name, pz.price
FROM
    pizzahut.pizza_types AS pt
        JOIN
    pizzahut.pizzas AS pz ON pt.pizza_type_id = pz.pizza_type_id
ORDER BY price DESC
LIMIT 1
-- Hence the highest priced pizza is "The Greek Pizza" with the price 35.95

-- Q.4 : Identify the most commen pizza size ordered
SELECT 
    pizzas.size, COUNT(ord.quantity) AS order_count
FROM
    pizzahut.pizzas
        JOIN
    pizzahut.order_details AS ord ON pizzas.pizza_id = ord.pizza_id
GROUP BY size
ORDER BY order_count DESC
-- Hence the most common pizza size ordered is "L" .

-- Q.5: List the top 5 most ordered pizza types along with their quantities.
SELECT 
    pt.name, SUM(quantity) AS Total_Quantities
FROM
    pizzahut.pizza_types AS pt
        JOIN
    (SELECT 
        pizzas.pizza_type_id, order_details.quantity
    FROM
        pizzahut.pizzas
    JOIN pizzahut.order_details ON pizzas.pizza_id = order_details.pizza_id) AS table1 ON pt.pizza_type_id = table1.pizza_type_id
GROUP BY name ORDER BY Total_Quantities DESC Limit 5

-- Intermediate Questions:- 
-- Q.6: Join the necessary tables to find the total quantity of each pizza category ordered.
SELECT 
    pizza_types.category,
    SUM(order_details.quantity) AS Total_Quantity
FROM
    pizzahut.pizza_types
        JOIN
    pizzahut.pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    pizzahut.order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_types.category
ORDER BY Total_Quantity DESC

-- Q.7: Determine the distribution of orders by hour of the day.
select hour(order_time) as Hours, count(order_id) as Total_Orders from orders
group by hours
order by Total_Orders DESC

-- Q.8: Join relevant tables to find the category-wise distribution of pizzas.
Select category, count(name) 
from pizza_types
group by category

-- Q.9: Group the orders by date and calculate the average number of pizzas ordered per day.
Select round(avg(quantity),0) as avg_pizza_order_per_day
from
(select orders.order_date, sum(order_details.quantity) as quantity
from Orders join order_details on orders.order_id = order_details.order_id
group by orders.order_date) as order_quantity

-- Q.10: Determine the top 3 most ordered pizza types based on revenue.
Select pizza_types.name, 
sum(pizzas.price*order_details.quantity) as Revenue 
from pizza_types
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on pizzas.pizza_id = order_details.pizza_id
group by pizza_types.name
order by revenue desc limit 3

-- Advanced Questions
-- Q.11: Calculate the percentage contribution of each pizza type to total revenue.
Select pizza_types.category, 
round(sum(order_details.quantity*pizzas.price)/ 
(select round(sum(quantity*price),2) as total_sales
from order_details join pizzas
on pizzas.pizza_id = order_details.pizza_id)*100,2) as revenue
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on order_details.pizza_id = pizzas.pizza_id
group by  pizza_types.category
order by revenue desc

-- Q.12: Analyze the cumulative revenue generated over time.
select order_date,
round(sum(revenue) over(order by order_date), 2) as cum_revenue
from
(select orders.Order_date,
sum(order_details.quantity*pizzas.price) as revenue
from order_details join pizzas
on order_details.pizza_id = pizzas.pizza_id
join orders
on orders.order_id = order_details.order_id
group by Order_date) as sales

-- Q.13: Determine the top 3 most ordered pizza types based on revenue for each pizza category.lect category, name, revenue,
select name, category, revenue from(
select category, name, revenue,
rank() over(partition by category order by revenue desc) as rn
from
(select pizza_types.category, pizza_types.name,
sum(order_details.quantity*pizzas.price) as revenue
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details 
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category, pizza_types.name) as table1) as table2
where rn<= 3

